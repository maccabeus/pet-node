{"version":3,"sources":["component/user/Register.js","component/plugins/popup.js","component/dashboard/Dashboard.js","component/user/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Register","props","setPopUp","state","wait","setState","popUp","setTimeout","disableButton","disabledButton","setMessage","msg","actionMsg","createAccount","err","user","document","getElementById","value","email","password","passwordConfirm","rnd","Math","random","indexOf","postUrl","actionUrl","fetch","then","response","json","responseJson","console","log","status","location","indexPath","formHtml","className","id","to","method","action","onSubmit","e","preventDefault","style","visibility","type","onClick","styles","formControl","name","placeholder","required","onKeyUp","parseInt","keyCode","formButton","formIbtn","disabled","meetContState","loginFormState","phpSelf","this","React","Component","PopUp","showPopUpWindow","_this","content","callBack","closeCaption","backArrow","closePopUpWindow","popUpWindow","autoDismiss","clearMessage","Dashboard","getSubList","actionUrlSubList","curHtml","map","sub","deleteSub","subList","list","getChannelList","actionUrlChannelList","subscribe","channelList","logoutUser","actionUrlLogout","takeToLogin","loginValidate","a","actionUrlLoginValidate","mode","credentials","submit","href","userId","channelId","actionUrlDeleteSub","channel","actionUrlSub","locationName","defaultHeader","color","fontSize","marginRight","marginLeft","display","html","componentWillMount","componentDidMount","popUpContent","confirmDeleteMsg","actionUrlUser","defaultUserRole","pageLoader","Login","loginAccount","defaultValue","registerPath","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0396ce73.chunk.js","sourcesContent":["/*\r\n @ This file will handle the joning a meeting\r\n @ Author: Adeniyi Anthony\r\n @ email: mlisoftinc@gmail.com\r\n */\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabledButton: false,\r\n            popUp: 'hidden',\r\n            meetContState: 'hidden',\r\n            loginFormState: 'visible',\r\n            actionMsg: 'Creating account. Please wait...',\r\n            actionUrl: 'http://localhost:9000/process/register',\r\n            indexPath: '/login',\r\n            phpSelf: '/register',\r\n            styles: {\r\n                formControl: \"form-control\",\r\n                formButton: \"form-button\",\r\n                formIbtn: \"ibtn\"\r\n            }\r\n        };\r\n    }\r\n\r\n    setPopUp = (state, wait = null) => {\r\n        if (wait === null) {\r\n            this.setState({popUp: state});\r\n        } else {\r\n            // wait for the stipulated time before taking action\r\n            setTimeout(() => {\r\n                this.setState({popUp: state});\r\n            }, wait)\r\n        }\r\n\r\n    };\r\n\r\n    disableButton = (state) => {\r\n        this.setState({disabledButton: state});\r\n    };\r\n\r\n    setMessage = (msg) => {\r\n        this.setState({actionMsg: msg});\r\n    };\r\n\r\n    createAccount = () => {\r\n        /*\r\n         disable the button first\r\n         */\r\n        this.disableButton(true);\r\n        /*\r\n         * once this is completed, show the pop up indicating that we are logging in\r\n         *\r\n         */\r\n        this.setPopUp('visible');\r\n        /*\r\n         * process the login\r\n         */\r\n        let err = false;\r\n\r\n        const user = document.getElementById('user').value;\r\n        const email = document.getElementById('email').value;\r\n        const password = document.getElementById('password').value;\r\n        const passwordConfirm = document.getElementById('confirm-password').value;\r\n\r\n        const rnd = Math.random();\r\n\r\n        if (password == \"\") {\r\n            this.setMessage(\"Password cannot be empty\");\r\n            err = true;\r\n        }\r\n        if (password !== passwordConfirm) {\r\n            this.setMessage(\"Confirm password not matching\");\r\n            err = true;\r\n        }\r\n        if (email == \"\" || email.indexOf('@') === -1 || email.indexOf('.') === -1) {\r\n            this.setMessage(\"Email empty or not valid\");\r\n            err = true;\r\n        }\r\n        if (user == \"\") {\r\n            this.setMessage(\"Username cannot be empty\");\r\n            err = true;\r\n        }\r\n\r\n\r\n        if (err == true) {\r\n            this.setPopUp('hidden', 2000);\r\n            this.disableButton(false);\r\n            return false;\r\n        }\r\n\r\n        this.setMessage(this.state.actionMsg)\r\n        const postUrl = `${this.state.actionUrl}?user=${user}&password=${password}&password-confirm=${passwordConfirm}&email=${email}&rnd=${rnd}`;\r\n\r\n        fetch(postUrl)\r\n            .then((response) => {\r\n               return (response.json());\r\n                //return (response.text());\r\n            })\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['msg'];\r\n\r\n                if (status === true) {\r\n                    this.setMessage(msg);\r\n                    /* create the socket incase we don't alreay have it running \r\n\t\t\t\t\t*/\r\n                    //meetSubmit.click();\r\n                    document.location = this.state.indexPath;\r\n\r\n                } else {\r\n                    // notify user of the login failure\r\n                    //alert(msg);\r\n                    this.setMessage(msg);\r\n                    // hide popup screen after 5 seconds\r\n                    this.setPopUp('hidden', 2000);\r\n                    // re-enable login  button\r\n                    this.disableButton(false);\r\n                }\r\n            });\r\n    };\r\n\r\n    formHtml = () => {\r\n        const html = <div className=\"row\">\r\n            <div className=\"form-holder\">\r\n                <div className=\"form-content\" >\r\n                    <div className=\"form-items\" id=\"register-form-cont\">\r\n                        <h3>Create an account</h3>\r\n                        <p>Please fill out form</p>\r\n\r\n                        <div className=\"page-links\">\r\n                            <Link to=\"/login\">Login</Link>\r\n                            <Link className=\"active\"  to=\"/register\">Register</Link>\r\n                        </div>\r\n\r\n                        <form id='login-form' method='post' action={this.state.indexPath} onSubmit={(e)=>{\r\n                            e.preventDefault();\r\n                            return false\r\n                        }}>\r\n                            <div className=\"modal-backdrop\" style={{visibility: this.state.popUp}}>\r\n                                <div className=\"modal-content modal_content\">\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"loader06\">\r\n                                        </div>\r\n                                        <div className=\"text-primary\">{this.state.actionMsg}</div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"ibtn\" type=\"button\" onClick={() => {\r\n                                            this.setPopUp('hidden');\r\n                                            this.disableButton(false)\r\n                                        }}>\r\n                                            Close\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input className={this.state.styles.formControl} type=\"text\" name=\"user\" id=\"user\"\r\n                                   placeholder=\"Choose a username\" required/>\r\n                            <input className={this.state.styles.formControl} type=\"text\" name=\"email\" id=\"email\"\r\n                                   placeholder=\"sample@mail.com\"/>\r\n                            <input className={this.state.styles.formControl} type=\"password\" name=\"password\"\r\n                                   id=\"password\" placeholder=\"Enter password\"/>\r\n                            <input className={this.state.styles.formControl} type=\"password\" name=\"confirm-password\"\r\n                                   id=\"confirm-password\" placeholder=\"Confirm password\" onKeyUp={(e)=>{\r\n                                if(parseInt(e.keyCode)===13)\r\n                                    this.createAccount();\r\n                            }}/>\r\n\r\n                            <div className={this.state.styles.formButton}>\r\n                                <button id=\"submit\" type=\"button\" className={this.state.styles.formIbtn}\r\n                                        disabled={this.state.disabledButton}\r\n                                        onClick={() => this.createAccount()}>Create Account\r\n                                </button>\r\n                                <button className=\"ibtn\" type=\"BUTTON\" id=\"meet-submit\"\r\n                                        style={{visibility: 'hidden'}}> Submit\r\n                                </button>\r\n                                <button id=\"meet-submit\" type=\"submit\" style={{visibility: 'hidden'}}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n        return (html);\r\n    };\r\n\r\n    render() {\r\n        return this.formHtml();\r\n    }\r\n}\r\nexport default Register;","const PopUp = {\r\n\r\n    showPopUpWindow: (_this, content, wait = null, callBack = null, closeCaption = 'Close', backArrow = 'fa fa-arrow-left') => {\r\n        // _this.showHideNotePad(true);\r\n\r\n        const popUp = <div className=\"modal-backdrop modal-backdrop_full\">\r\n            <div className=\"modal-footer\">\r\n\r\n                <button className=\"ibtn float-left\" type=\"button\" onClick={() => {\r\n                }}>\r\n                    <i className={backArrow}></i>\r\n                </button>\r\n\r\n                <button className=\"ibtn\" type=\"button\" onClick={() => {\r\n                    closePopUpWindow(_this);\r\n                }}>\r\n                    {closeCaption}\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-content modal-content-full\">\r\n                <div className=\"modal-body\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        </div>;\r\n        _this.setState({popUpWindow: popUp}, () => {\r\n            if (callBack !== null) {\r\n                callBack();\r\n            }\r\n            return (popUp);\r\n        });\r\n    },\r\n\r\n    closePopUpWindow: (_this) => {\r\n        return closePopUpWindow(_this);\r\n    },\r\n\r\n    setMessage: (_this, msg, wait = 5000, autoDismiss = true) => {\r\n        _this.setState({actionMsg: msg}, () => {\r\n            // clear after a wait\r\n            if (autoDismiss === true) {\r\n                setTimeout(() => {\r\n                    _this.setState({actionMsg: null});\r\n                }, wait)\r\n            }\r\n        });\r\n    },\r\n    clearMessage: (_this) => {\r\n        _this.setState({actionMsg: null});\r\n    },\r\n\r\n}\r\n\r\n/*\r\n    private functions\r\n */\r\n\r\nconst closePopUpWindow = (_this) => {\r\n    _this.setState({popUpWindow: null});\r\n};\r\n\r\nexport default PopUp;","/*\r\n @ This file will handle the dashboard\r\n @ Author: Adeniyi Anthony\r\n @ email: mlisoftinc@gmail.com\r\n */\r\nimport React from \"react\";\r\nimport PopUp from \"./../plugins/popup\";\r\nimport {Link, BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabledButton: false,\r\n            popUp: 'hidden',\r\n            popUpContent: null,\r\n            popUpWindow: null,\r\n\r\n            actionMsg: null,\r\n            confirmDeleteMsg: \"Are you sure?\",\r\n            actionUrlSubList: 'http://localhost:3000/process/sub-list',\r\n            actionUrlSub: 'http://localhost:3000/process/sub',\r\n            actionUrlChannelList: 'http://localhost:3000/process/channel-list',\r\n            actionUrlLogout: 'http://localhost:3000/process/logout',\r\n            actionUrlDeleteSub: 'http://localhost:3000/process/sub-delete',\r\n            actionUrlLoginValidate: 'http://localhost:3000/process/login-validate',\r\n            actionUrlUser: 'http://localhost:3000/process/user',\r\n\r\n            indexPath: '/',\r\n            defaultUserRole: 'admin',\r\n            subList: [<div  style={{marginLeft:\"50%\"}} className='loader09'></div>],\r\n            channelList: [<div style={{marginLeft:\"50%\"}} className='loader09'></div>],\r\n            styles: {\r\n                formControl: \"form-control\",\r\n                formButton: \"form-button\",\r\n                formIbtn: \"ibtn\"\r\n            },\r\n            pageLoader: <div className='loader09'></div>,\r\n        };\r\n\r\n        // check if user is logged in\r\n         this.loginValidate();\r\n    }\r\n\r\n    setPopUp = (state, wait = null) => {\r\n        if (wait === null) {\r\n            this.setState({popUp: state});\r\n        } else {\r\n            // wait for the stipulated time before taking action\r\n            setTimeout(() => {\r\n                this.setState({popUp: state});\r\n            }, wait)\r\n        }\r\n\r\n        if (state == 'hidden') {\r\n            // clear the action msg\r\n            this.setState({actionMsg: null})\r\n        }\r\n\r\n    };\r\n\r\n    disableButton = (state) => {\r\n        this.setState({disabledButton: state});\r\n    };\r\n\r\n    setMessage = (msg, callBack = null) => {\r\n        this.setState({actionMsg: msg}, () => {\r\n            return callBack !== null && typeof callBack === 'function' ? callBack() : null;\r\n        });\r\n    };\r\n\r\n    getSubList = () => {\r\n\r\n        const rnd = Math.random();\r\n\r\n        const postUrl = `${this.state.actionUrlSubList}?rnd=${rnd}`;\r\n\r\n        fetch(postUrl)\r\n            //.then((response) => response.json())\r\n            .then((response) => {\r\n                return (response.json());\r\n                //return (response.text());\r\n            })\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['msg'];\r\n                const content = responseJson['content'];\r\n\r\n                // filter to have just the channel user not\r\n\r\n                if (status == true) {\r\n                    let curHtml = content.map((sub) => {\r\n\r\n                        const list = <div id={sub['id']} key={sub['id']} className=\"dashboard-list-cont\">\r\n                            <div><span className=\"title\">{sub['channel']}</span>\r\n                                <i className='dashboard-list-delete icon-030 ' onClick={() => {\r\n                                    this.deleteSub(sub['user_id'], sub['channel_id']);\r\n                                }}>\r\n                                </i>\r\n                            </div>\r\n                            <div>Channel: {sub['channel']}</div>\r\n                        </div>;\r\n                        return (list);\r\n                    });\r\n                    //alert(curHtml);\r\n                    this.setState({subList: curHtml});\r\n                } else {\r\n\r\n                    const list = <div className=\"dashboard-list-cont\">\r\n                        <div>{msg}</div>\r\n                    </div>;\r\n                    this.setState({subList: list});\r\n                }\r\n            });\r\n    }\r\n\r\n    getChannelList = () => {\r\n\r\n        const rnd = Math.random();\r\n\r\n        const postUrl = `${this.state.actionUrlChannelList}?rnd=${rnd}`;\r\n\r\n        fetch(postUrl)\r\n            //.then((response) => response.json())\r\n            .then((response) => {\r\n                return (response.json());\r\n                //return (response.text());\r\n            })\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['msg'];\r\n                let content = responseJson['content'];\r\n\r\n                if (status == true) {\r\n                    let curHtml = content.map((sub) => {\r\n\r\n                        const list = <div id={sub['id']} key={sub['id']} className=\"dashboard-list-cont\">\r\n                            <div><span className=\"title\">{sub['channel']}</span>\r\n                                <i className='dashboard-list-delete icon-040' onClick={() => {\r\n                                    this.subscribe(sub['id'], sub['channel']);\r\n                                }}>\r\n                                </i>\r\n                            </div>\r\n                            <div>{sub['des']}</div>\r\n                        </div>;\r\n                        return (list);\r\n                    });\r\n                    //alert(curHtml);\r\n                    this.setState({channelList: curHtml});\r\n                } else {\r\n\r\n                    const list = <div className=\"dashboard-list-cont\">\r\n                        <div>{msg}</div>\r\n                    </div>;\r\n                    this.setState({channelList: list});\r\n                }\r\n            });\r\n    }\r\n\r\n    logoutUser = () => {\r\n\r\n        const rnd = Math.random();\r\n        PopUp.setMessage(this, <div className=\"alert alert-info\">Signing out...</div>);\r\n        const postUrl = `${this.state.actionUrlLogout}?rnd=${rnd}`;\r\n        fetch(postUrl)\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['status'];\r\n                // once completed, go to dashboard\r\n                if (status === true) {\r\n                    this.setMessage(msg);\r\n                    /* create the socket incase we don't alreay have it running\r\n                    */\r\n                    this.setPopUp('hidden', 2000);\r\n                    //document.location = this.state.indexPath;\r\n                    this.takeToLogin();\r\n                } else {\r\n                    // notify user of the failure\r\n                    //alert(msg);\r\n                    this.setMessage(msg);\r\n                    // hide popup screen after 5 seconds\r\n                    this.setPopUp('hidden', 2000);\r\n                    // re-enable login  button\r\n                    this.disableButton(false);\r\n                }\r\n\r\n            });\r\n    };\r\n\r\n    loginValidate =  async () => {\r\n\r\n        const rnd = Math.random();\r\n        const postUrl = `${this.state.actionUrlLoginValidate}?rnd=${rnd}`;\r\n        await fetch(postUrl, {\r\n            method:\"get\",\r\n            mode:\"cors\",\r\n            credentials:\"include\",\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['status'];\r\n                if (status === false) {\r\n                   this.takeToLogin();\r\n                }\r\n            });\r\n    };\r\n\r\n    takeToLogin=()=>{\r\n        document.getElementById(\"link-to-login\").submit();\r\n        document.location.href=this.state.indexPath;\r\n    }\r\n    deleteSub = (userId, channelId) => {\r\n\r\n        const rnd = Math.random();\r\n        PopUp.setMessage(this, <div className=\"alert alert-info\">Unsubscribing, please wait...</div>);\r\n\r\n        const postUrl = `${this.state.actionUrlDeleteSub}?user-id=${userId}&channel-id=${channelId}&rnd=${rnd}`;\r\n\r\n        fetch(postUrl)\r\n            //.then((response) => response.json())\r\n            .then((response) => {\r\n                return (response.json());\r\n                //return (response.text());\r\n            })\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['msg'];\r\n\r\n                if (status === true) {\r\n                    PopUp.setMessage(this, <div className=\"alert alert-success\">{msg}</div>);\r\n                    this.getSubList();\r\n                    this.getChannelList()\r\n\r\n                } else {\r\n                    // notify user of the login failure\r\n                    PopUp.setMessage(this, <div className=\"alert alert-danger\">{msg}</div>);\r\n                }\r\n            });\r\n    }\r\n\r\n    subscribe = (channelId, channel) => {\r\n        const rnd = Math.random();\r\n        PopUp.setMessage(this, <div className=\"alert alert-info\">Subscribing to {channel}, please wait...</div>);\r\n\r\n        const postUrl = `${this.state.actionUrlSub}?channel-id=${channelId}&channel=${channel}&rnd=${rnd}`;\r\n        //alert(postUrl);\r\n        fetch(postUrl)\r\n            //.then((response) => response.json())\r\n            .then((response) => {\r\n                return (response.json());\r\n                //return (response.text());\r\n            })\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['msg'];\r\n                if (status === true) {\r\n                    PopUp.setMessage(this, <div className=\"alert alert-success\">{msg}</div>);\r\n                    this.getSubList();\r\n                    this.getChannelList()\r\n\r\n                } else {\r\n                    // notify user\r\n                    PopUp.setMessage(this, <div className=\"alert alert-danger\">{msg}</div>);\r\n                }\r\n            });\r\n    }\r\n\r\n    formHtml = (locationName = \"Dashboard\") => {\r\n\r\n        const defaultHeader = <aside className=\"dashboard-header\">\r\n            <div style=\r\n                     {\r\n                         {\r\n                             color: \"#ffff\", fontSize: \"18pt\", marginRight: \"auto\"\r\n                         }\r\n                     }\r\n            >{locationName}\r\n            </div>\r\n            <div style=\r\n                     {\r\n                         {\r\n                             color: \"#ffff\",\r\n                             marginLeft: \"auto\"\r\n                         }\r\n                     }\r\n                 onClick={() => {\r\n                     this.logoutUser()\r\n                 }}\r\n            >\r\n                <i className=\" dashboard-logout icon-086\"></i>\r\n            </div>\r\n            <form method=\"post\" style={{display:\"none\", visibility:\"hidden\"}} id=\"link-to-login\" action=\"/login\">\r\n                <input type=\"hidden\" id=\"link-login-token\" value={false} />\r\n            </form>\r\n        </aside>;\r\n\r\n        const html = <div className=\"room\">\r\n\r\n            <section id=\"room-header\" className=\"room-header\">\r\n                {this.state.actionMsg}\r\n                {this.state.popUpWindow}\r\n                {defaultHeader}\r\n            </section>\r\n\r\n            <section className=\"room-body-dashboard\" className=\"dashboard-content\">\r\n                <div className=\"dashboard-list-cont-no-effect col-sm-6 \" id=\"room-list\">\r\n                    <div className=\"dashboard-list-cont-no-effect dashboard-list-header\">Your Channels</div>\r\n                    {this.state.subList}\r\n                </div>\r\n                <div className=\"dashboard-list-cont-no-effect col-sm-6 \" id=\"subscription-list\">\r\n                    <div className=\"dashboard-list-cont-no-effect dashboard-list-header\">Available Channels</div>\r\n                    {this.state.channelList}\r\n                </div>\r\n            </section>\r\n            <section className=\"room-footer-dashboard\"></section>\r\n        </div>\r\n        return (html);\r\n    };\r\n    componentWillMount= async ()=>{\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getSubList();\r\n        this.getChannelList();\r\n    }\r\n\r\n    render() {\r\n        //alert(this.formHtml());\r\n        return this.formHtml();\r\n    }\r\n}\r\n\r\nexport default Dashboard;","/*\r\n @ This file will handle the login\r\n @ Author: Adeniyi Anthony\r\n @ email: mlisoftinc@gmail.com\r\n */\r\nimport React from \"react\";\r\nimport Register from \"./Register\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n} from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const port=3000;\r\n        this.state = {\r\n            disabledButton: false,\r\n            popUp: 'hidden',\r\n            meetContState: 'hidden',\r\n            loginFormState: 'visible',\r\n            actionMsg: 'Logging in. Please wait...',\r\n            actionUrl: `http://localhost:${port}/process/login`,\r\n            indexPath: '/dashboard',\r\n            registerPath: '/register',\r\n            phpSelf: '/',\r\n            styles: {\r\n                formControl: \"form-control\",\r\n                formButton: \"form-button\",\r\n                formIbtn: \"ibtn\"\r\n            }\r\n        };\r\n    }\r\n\r\n    setPopUp = (state, wait = null) => {\r\n        if (wait === null) {\r\n            this.setState({popUp: state});\r\n        } else {\r\n            // wait for the stipulated time before taking action\r\n            setTimeout(() => {\r\n                this.setState({popUp: state});\r\n            }, wait)\r\n        }\r\n\r\n    };\r\n    disableButton = (state) => {\r\n        this.setState({disabledButton: state});\r\n    };\r\n\r\n    setMessage = (msg) => {\r\n        this.setState({actionMsg: msg});\r\n    };\r\n\r\n    loginAccount = () => {\r\n        /*\r\n         disable the button first\r\n         */\r\n        this.disableButton(true);\r\n        /*\r\n         * once this is completed, show the pop up indicating that we are logging in\r\n         *\r\n         */\r\n        this.setPopUp('visible');\r\n        /*\r\n         * process the login\r\n         */\r\n        let err = false;\r\n\r\n        const user = document.getElementById('user').value;\r\n        const password = document.getElementById('password').value;\r\n\r\n        const rnd = Math.random();\r\n\r\n        if (password == \"\") {\r\n            this.setMessage(\"Password cannot be empty\");\r\n            err = true;\r\n        }\r\n        if (user == \"\") {\r\n            this.setMessage(\"Username cannot be empty\");\r\n            err = true;\r\n        }\r\n\r\n        if (err == true) {\r\n            this.setPopUp('hidden', 2000);\r\n            this.disableButton(false);\r\n            return false;\r\n        }\r\n\r\n        this.setMessage(this.state.actionMsg)\r\n        const postUrl = `${this.state.actionUrl}?user=${user}&password=${password}&rnd=${rnd}`;\r\n\r\n        fetch(postUrl, {\r\n            method:\"get\",\r\n            mode:\"cors\",\r\n            credentials:\"include\",\r\n\r\n        })\r\n            //.then((response) => response.json())\r\n            .then((response) => {\r\n                return (response.json());\r\n                //return (response.text());\r\n            })\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['msg'];\r\n                if (status === true) {\r\n                    this.setMessage(msg);\r\n                    document.location = `${this.state.indexPath}?${status}`;\r\n                } else {\r\n                    // notify user of the login failure\r\n                    //alert(msg);\r\n                    this.setMessage(msg);\r\n                    // hide popup screen after 5 seconds\r\n                    this.setPopUp('hidden', 2000);\r\n                    // re-enable login  button\r\n                    this.disableButton(false);\r\n                }\r\n            });\r\n    };\r\n\r\n    formHtml = () => {\r\n        const html =\r\n            <div className=\"row\">\r\n                <div className=\"form-holder\">\r\n                    <div className=\"form-content\">\r\n                        <div className=\"form-items\">\r\n                            <h3>An amazing pet life </h3>\r\n                            <p>Login to your account</p>\r\n                            <div className=\"page-links\">\r\n                                <Link className=\"active\"  id=\"link-to-login\" to=\"/login\">Login</Link>\r\n                                <Link to=\"/register\">Register</Link>\r\n                                <Link style={{display:\"none\", visibility:\"hidden\"}} id=\"link-to-dashboard\" to=\"/dashboard\">Dashboard</Link>\r\n                            </div>\r\n                            <form id='login-form' onSubmit={(e) => {\r\n                                e.preventDefault()\r\n                            }}>\r\n                                <div className=\"modal-backdrop\" style={{visibility: this.state.popUp}}>\r\n                                    <div className=\"modal-content modal_content\">\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"loader06\">\r\n                                            </div>\r\n                                            <div className=\"text-primary\">{this.state.actionMsg}</div>\r\n                                        </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button className=\"ibtn\" type=\"button\" onClick={() => {\r\n                                                this.setPopUp('hidden');\r\n                                                this.disableButton(false)\r\n                                            }}>\r\n                                                Close\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <input className={this.state.styles.formControl} type=\"text\" name=\"user\" id=\"user\"\r\n                                       placeholder=\"Username\" required/>\r\n                                <input className={this.state.styles.formControl} type=\"password\" name=\"password\"\r\n                                       id=\"password\" placeholder=\"Enter password\" onKeyUp={(e) => {\r\n                                    if (parseInt(e.keyCode) === 13)\r\n                                        this.loginAccount()\r\n                                }}/>\r\n                                <div className={this.state.styles.formButton}>\r\n                                    <button id=\"submit\" type=\"button\" className={this.state.styles.formIbtn}\r\n                                            disabled={this.state.disabledButton}\r\n                                            onClick={() => this.loginAccount()}>Login\r\n                                    </button>\r\n                                    <button className=\"ibtn\" type=\"submit\" id=\"meet-submit\"\r\n                                            style={{visibility: 'hidden'}}> Submit\r\n                                    </button>\r\n                                    <button id=\"meet-submit\" type=\"submit\" style={{visibility: 'hidden'}}></button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form method=\"post\" style={{display:\"none\", visibility:\"hidden\"}} id=\"dashboard-login-form\" action=\"/dashboard/\">\r\n                    <input type=\"hidden\" id=\"dashboard-login-token\" defaultValue={false} />\r\n                    <input type=\"submit\" id=\"dashboard-login-button\"/>\r\n                </form>\r\n            </div>\r\n\r\n        return (html);\r\n    };\r\n\r\n    render() {\r\n        return this.formHtml();\r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport './assets/css/App.css';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\n/* import all the application routes */\r\nimport Login from \"./component/user/Login\";\r\nimport Register from \"./component/user/Register\";\r\nimport Dashboard from \"./component/dashboard/Dashboard\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <Router id=\"app\" className=\"container-fluid\">\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Login/>\r\n                    </Route>\r\n                    <Route exact path=\"/login\">\r\n                        <Login/>\r\n                    </Route>\r\n                    <Route exact path=\"/register\">\r\n                        <Register/>\r\n                    </Route>\r\n                    <Route exact path=\"/dashboard\">\r\n                        <Dashboard/>\r\n                    </Route>\r\n                </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}