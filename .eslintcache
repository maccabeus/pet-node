[{"C:\\xampp\\htdocs\\pet\\src\\index.js":"1","C:\\xampp\\htdocs\\pet\\src\\App.js":"2","C:\\xampp\\htdocs\\pet\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\pet\\src\\component\\user\\Login.js":"4","C:\\xampp\\htdocs\\pet\\src\\component\\user\\Register.js":"5","C:\\xampp\\htdocs\\pet\\src\\component\\dashboard\\Dashboard.js":"6","C:\\xampp\\htdocs\\pet\\src\\component\\plugins\\popup.js":"7"},{"size":288,"mtime":1606977531645,"results":"8","hashOfConfig":"9"},{"size":1007,"mtime":1607320824625,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1606974251785,"results":"11","hashOfConfig":"9"},{"size":7527,"mtime":1607331406980,"results":"12","hashOfConfig":"9"},{"size":7779,"mtime":1607324886530,"results":"13","hashOfConfig":"9"},{"size":12378,"mtime":1607331086964,"results":"14","hashOfConfig":"9"},{"size":1780,"mtime":1607265320489,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4r2csx",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\pet\\src\\index.js",[],["33","34"],"C:\\xampp\\htdocs\\pet\\src\\App.js",[],"C:\\xampp\\htdocs\\pet\\src\\reportWebVitals.js",[],["35","36"],"C:\\xampp\\htdocs\\pet\\src\\component\\user\\Login.js",["37","38","39","40","41","42"],"C:\\xampp\\htdocs\\pet\\src\\component\\user\\Register.js",["43","44","45","46"],"/*\r\n @ This file will handle the joning a meeting\r\n @ Author: Adeniyi Anthony\r\n @ email: mlisoftinc@gmail.com\r\n */\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabledButton: false,\r\n            popUp: 'hidden',\r\n            meetContState: 'hidden',\r\n            loginFormState: 'visible',\r\n            actionMsg: 'Creating account. Please wait...',\r\n            actionUrl: 'http://localhost:9000/process/register',\r\n            indexPath: '/login',\r\n            phpSelf: '/register',\r\n            styles: {\r\n                formControl: \"form-control\",\r\n                formButton: \"form-button\",\r\n                formIbtn: \"ibtn\"\r\n            }\r\n        };\r\n    }\r\n\r\n    setPopUp = (state, wait = null) => {\r\n        if (wait === null) {\r\n            this.setState({popUp: state});\r\n        } else {\r\n            // wait for the stipulated time before taking action\r\n            setTimeout(() => {\r\n                this.setState({popUp: state});\r\n            }, wait)\r\n        }\r\n\r\n    };\r\n\r\n    disableButton = (state) => {\r\n        this.setState({disabledButton: state});\r\n    };\r\n\r\n    setMessage = (msg) => {\r\n        this.setState({actionMsg: msg});\r\n    };\r\n\r\n    createAccount = () => {\r\n        /*\r\n         disable the button first\r\n         */\r\n        this.disableButton(true);\r\n        /*\r\n         * once this is completed, show the pop up indicating that we are logging in\r\n         *\r\n         */\r\n        this.setPopUp('visible');\r\n        /*\r\n         * process the login\r\n         */\r\n        let err = false;\r\n\r\n        const user = document.getElementById('user').value;\r\n        const email = document.getElementById('email').value;\r\n        const password = document.getElementById('password').value;\r\n        const passwordConfirm = document.getElementById('confirm-password').value;\r\n\r\n        const rnd = Math.random();\r\n\r\n        if (password == \"\") {\r\n            this.setMessage(\"Password cannot be empty\");\r\n            err = true;\r\n        }\r\n        if (password !== passwordConfirm) {\r\n            this.setMessage(\"Confirm password not matching\");\r\n            err = true;\r\n        }\r\n        if (email == \"\" || email.indexOf('@') === -1 || email.indexOf('.') === -1) {\r\n            this.setMessage(\"Email empty or not valid\");\r\n            err = true;\r\n        }\r\n        if (user == \"\") {\r\n            this.setMessage(\"Username cannot be empty\");\r\n            err = true;\r\n        }\r\n\r\n\r\n        if (err == true) {\r\n            this.setPopUp('hidden', 2000);\r\n            this.disableButton(false);\r\n            return false;\r\n        }\r\n\r\n        this.setMessage(this.state.actionMsg)\r\n        const postUrl = `${this.state.actionUrl}?user=${user}&password=${password}&password-confirm=${passwordConfirm}&email=${email}&rnd=${rnd}`;\r\n\r\n        fetch(postUrl)\r\n            .then((response) => {\r\n               return (response.json());\r\n                //return (response.text());\r\n            })\r\n            .then((responseJson) => {\r\n                console.log(responseJson);\r\n                const status = responseJson['status'];\r\n                const msg = responseJson['msg'];\r\n\r\n                if (status === true) {\r\n                    this.setMessage(msg);\r\n                    /* create the socket incase we don't alreay have it running \r\n\t\t\t\t\t*/\r\n                    //meetSubmit.click();\r\n                    document.location = this.state.indexPath;\r\n\r\n                } else {\r\n                    // notify user of the login failure\r\n                    //alert(msg);\r\n                    this.setMessage(msg);\r\n                    // hide popup screen after 5 seconds\r\n                    this.setPopUp('hidden', 2000);\r\n                    // re-enable login  button\r\n                    this.disableButton(false);\r\n                }\r\n            });\r\n    };\r\n\r\n    formHtml = () => {\r\n        const html = <div className=\"row\">\r\n            <div className=\"form-holder\">\r\n                <div className=\"form-content\" >\r\n                    <div className=\"form-items\" id=\"register-form-cont\">\r\n                        <h3>Create an account</h3>\r\n                        <p>Please fill out form</p>\r\n\r\n                        <div className=\"page-links\">\r\n                            <Link to=\"/login\">Login</Link>\r\n                            <Link to=\"/register\">Register</Link>\r\n                        </div>\r\n\r\n                        <form id='login-form' method='post' action={this.state.indexPath} onSubmit={(e)=>{\r\n                            e.preventDefault();\r\n                            return false\r\n                        }}>\r\n                            <div className=\"modal-backdrop\" style={{visibility: this.state.popUp}}>\r\n                                <div className=\"modal-content modal_content\">\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"loader06\">\r\n                                        </div>\r\n                                        <div className=\"text-primary\">{this.state.actionMsg}</div>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button className=\"ibtn\" type=\"button\" onClick={() => {\r\n                                            this.setPopUp('hidden');\r\n                                            this.disableButton(false)\r\n                                        }}>\r\n                                            Close\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <input className={this.state.styles.formControl} type=\"text\" name=\"user\" id=\"user\"\r\n                                   placeholder=\"Choose a username\" required/>\r\n                            <input className={this.state.styles.formControl} type=\"text\" name=\"email\" id=\"email\"\r\n                                   placeholder=\"sample@mail.com\"/>\r\n                            <input className={this.state.styles.formControl} type=\"password\" name=\"password\"\r\n                                   id=\"password\" placeholder=\"Enter password\"/>\r\n                            <input className={this.state.styles.formControl} type=\"password\" name=\"confirm-password\"\r\n                                   id=\"confirm-password\" placeholder=\"Confirm password\" onKeyUp={(e)=>{\r\n                                if(parseInt(e.keyCode)===13)\r\n                                    this.createAccount();\r\n                            }}/>\r\n\r\n                            <div className={this.state.styles.formButton}>\r\n                                <button id=\"submit\" type=\"button\" className={this.state.styles.formIbtn}\r\n                                        disabled={this.state.disabledButton}\r\n                                        onClick={() => this.createAccount()}>Create Account\r\n                                </button>\r\n                                <button className=\"ibtn\" type=\"BUTTON\" id=\"meet-submit\"\r\n                                        style={{visibility: 'hidden'}}> Submit\r\n                                </button>\r\n                                <button id=\"meet-submit\" type=\"submit\" style={{visibility: 'hidden'}}></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n        return (html);\r\n    };\r\n\r\n    render() {\r\n        return this.formHtml();\r\n    }\r\n}\r\nexport default Register;","C:\\xampp\\htdocs\\pet\\src\\component\\dashboard\\Dashboard.js",["47","48","49","50","51","52","53","54"],"C:\\xampp\\htdocs\\pet\\src\\component\\plugins\\popup.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":17},{"ruleId":"61","severity":1,"message":"66","line":12,"column":22,"nodeType":"63","messageId":"64","endLine":12,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":77,"column":22,"nodeType":"69","messageId":"70","endLine":77,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":81,"column":18,"nodeType":"69","messageId":"70","endLine":81,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":86,"column":17,"nodeType":"69","messageId":"70","endLine":86,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":72,"column":22,"nodeType":"69","messageId":"70","endLine":72,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":80,"column":19,"nodeType":"69","messageId":"70","endLine":80,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":84,"column":18,"nodeType":"69","messageId":"70","endLine":84,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":90,"column":17,"nodeType":"69","messageId":"70","endLine":90,"endColumn":19},{"ruleId":"61","severity":1,"message":"71","line":8,"column":9,"nodeType":"63","messageId":"64","endLine":8,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":8,"column":32,"nodeType":"63","messageId":"64","endLine":8,"endColumn":38},{"ruleId":"67","severity":1,"message":"68","line":53,"column":19,"nodeType":"69","messageId":"70","endLine":53,"endColumn":21},{"ruleId":"61","severity":1,"message":"72","line":87,"column":21,"nodeType":"63","messageId":"64","endLine":87,"endColumn":33},{"ruleId":"67","severity":1,"message":"68","line":89,"column":28,"nodeType":"69","messageId":"70","endLine":89,"endColumn":30},{"ruleId":"67","severity":1,"message":"68","line":133,"column":28,"nodeType":"69","messageId":"70","endLine":133,"endColumn":30},{"ruleId":"61","severity":1,"message":"73","line":205,"column":23,"nodeType":"63","messageId":"64","endLine":205,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":310,"column":54,"nodeType":"76","endLine":310,"endColumn":83},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'meetingCount' is assigned a value but never used.","'msg' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]